package code;


import lejos.hardware.motor.EV3LargeRegulatedMotor;
import lejos.hardware.port.MotorPort;
import lejos.hardware.port.SensorPort;
import lejos.hardware.sensor.EV3TouchSensor;
import lejos.hardware.sensor.EV3UltrasonicSensor;
import lejos.hardware.sensor.SensorMode;
import lejos.robotics.RegulatedMotor;
import lejos.robotics.SampleProvider;
import lejos.utility.Delay;

public class Robot {

	RegulatedMotor motorL;
	RegulatedMotor motorR;
	EV3TouchSensor touchL;
	EV3TouchSensor touchR;
	EV3UltrasonicSensor irSensor;
	SampleProvider rangeSampler;
	SensorMode touch;
	boolean done;
	

	public Robot() {

		motorL = new EV3LargeRegulatedMotor(MotorPort.A);
		motorR = new EV3LargeRegulatedMotor(MotorPort.B);
		motorL.synchronizeWith(new RegulatedMotor[] { motorR });
		irSensor = new EV3UltrasonicSensor(SensorPort.S1);
		touchL = new EV3TouchSensor(SensorPort.S2);
		touchR = new EV3TouchSensor(SensorPort.S3);
		PDride();
		motorL.close();
		motorR.close();
		touchL.close();
		touchR.close();
	}
	
	public void PDride() {
		rangeSampler = irSensor.getDistanceMode();
		float[] lastRange = new float[rangeSampler.sampleSize()];
		while (true) {
			rangeSampler.fetchSample(lastRange, 0);
			System.out.println(lastRange[0]);
			Delay.msDelay(100);
		}
		
	}
	
	
	public void rotationRight() {
		motorL.startSynchronization();
		motorL.rotate(167);
		motorR.rotate(-167);
		motorL.endSynchronization();
		Delay.msDelay(1000);
	}
	
	public void rotationLeft() {
		motorL.startSynchronization();
		motorR.rotate(167);
		motorL.rotate(-167);
		motorL.endSynchronization();
		Delay.msDelay(1000);
	}
	
	public void rotation180() {
		motorL.startSynchronization();
		motorR.rotate(348);
		motorL.rotate(-348);
		motorL.endSynchronization();
		Delay.msDelay(1200);
	}
	
	public void stop() {
		motorL.startSynchronization();
		motorL.stop();
		motorR.stop();
		motorL.endSynchronization();
	}
	
	public void ride(int l) {
		double angle = 360*l/(3.14159*5.6);
		motorL.startSynchronization();
		motorL.rotate((int)angle);
		motorR.rotate((int)angle);
		motorL.endSynchronization();
		Delay.msDelay(l*50);
	}
	
	
	
}
